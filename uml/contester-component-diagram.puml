@startuml contester-component-diagram
allow_mixing
hide circle

component ContesterApplication
component "Selenium" as selenium
component "JSoup" as jsoup
component "JavaParser" as parser
component InMemoryJavaCompiler
component "DresdenOCL" as standalone
component "Osmo" as osmotester

note as seleniumNote
This is only used
when GUI is loaded from URL
end note
seleniumNote .u. selenium

note as osmoNote
This is only used
when generating tests.
end note
osmotester -d- osmoNote

file application.properties as config {
}
artifact "Model.java" as artifactModel
artifact "ModelTests.java" as artifactModelTests
artifact "Constraints .aj files" as artifactAj

circle websiteUrl
circle htmlFilePath

object "HTML source" as htmlSource
object "DOM model" as domModel
object "Metamodel instance" as metamodel
object "Compiled model class" as compiledModel
collections "Test steps" as testSteps

' Inputs
config <.. ContesterApplication : 1: <<input>>
websiteUrl <.. ContesterApplication: 1b: <<input>>
htmlFilePath <.. ContesterApplication: 1a: <<input>>
htmlFilePath <.> websiteUrl: \t<<or>>\t

' HTML file retrieve
ContesterApplication ..> selenium: 2b: <<run>>
selenium ..> htmlSource: <<output>>

' HTML parse into metamodel
ContesterApplication .d.> jsoup: 3: <<run>>
jsoup ..> htmlSource: <<input>>
jsoup ..> domModel: <<output>>
ContesterApplication .d.> domModel: <<use>>
ContesterApplication ..> metamodel: 4: <<output>>

' Generate java model
ContesterApplication ..> parser: 5: <<run>>
parser ..> metamodel: <<input>>
parser ..> artifactModel: <<output>>

' Compile java model
ContesterApplication ..> InMemoryJavaCompiler: 6: <<run>>
InMemoryJavaCompiler ...> artifactModel: <<input>>
InMemoryJavaCompiler ..> compiledModel: <<output>>

' Generate AspectJ
ContesterApplication ..> standalone: 7: <<run>>
standalone ..> compiledModel: <<input>>
standalone ..> metamodel: <<input>>
standalone ...> artifactAj: <<output>>

' Generate test cases
ContesterApplication ..> osmotester: 8: <<run>>
osmotester ..> compiledModel: <<input>>
osmotester ..> testSteps: <<output>>
ContesterApplication ..> testSteps: <<use>>
ContesterApplication ....> artifactModelTests: <<output>>

@enduml